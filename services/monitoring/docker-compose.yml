version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  internal-net:
    driver: overlay
    attachable: true
  monitored-net:
    name: ${MONITORED_NETWORK}
    external: true

services:

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - internal-net
      - monitored-net
    #logging:
    #  driver: gelf
    #  options:
    #    gelf-address: "tcp://127.0.0.1:12201" 
    deploy:
      placement:
        constraints:
          - node.role==manager
      #restart_policy:
      #  condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100
    networks:
      - internal-net
    deploy:
      mode: global
    #restart_policy:
    #    condition: on-failure

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - internal-net
    deploy:
      placement:
        constraints:
           - node.role==manager
      #restart_policy:
      #  condition: on-failure

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - internal-net
      - monitored-net
    deploy:
      mode: global
    #restart_policy:
    #    condition: on-failure

  postgres-exporter:
    image: wrouesnel/postgres_exporter
    ports:
      - 9187
    networks:
      - internal-net
      - monitored-net
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_EXPORTER_DATA_SOURCE_NAME}
    #deploy:
    #  mode: global

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    user: "104"
    networks:
      - internal-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      #restart_policy:
      #  condition: on-failure

