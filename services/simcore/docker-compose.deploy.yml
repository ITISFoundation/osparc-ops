# osparc-simcore stack (framework stack)
version: '3.7'
services:
  webserver:
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        - traefik.http.services.webserver.loadbalancer.server.port=8080
        - traefik.http.routers.webserver.rule=PathPrefix(`/`)
        - traefik.http.routers.webserver.priority=1
        - traefik.http.routers.webserver.entrypoints=https
        - traefik.http.routers.webserver.tls=true
        - traefik.http.routers.webserver.middlewares=gzip_compress@file
    networks:
      - public
      - monitored
    environment:
      - LOGSPOUT_MULTILINE=true

  # need to pass self-signed certificate in /usr/local/share/ca-certificates and call update-ca-certificates
  storage:
    secrets:
      - source: rootca.crt
        target: /usr/local/share/ca-certificates/osparc.crt
    environment:
      # minio sdk uses this env to use self-signed certs
      - SSL_CERT_FILE: /usr/local/share/ca-certificates/osparc.crt
      - LOGSPOUT_MULTILINE=true
    networks:
      - monitored

  director:
    environment:
      - LOGSPOUT_MULTILINE=true
  
  apihub:
    environment:
      - LOGSPOUT_MULTILINE=true 

  sidecar:
    environment:
      - LOGSPOUT_MULTILINE=true  

  rabbit:
    networks:
      - monitored
    environment:
      - LOGSPOUT_MULTILINE=true

  postgres:
    networks:
      - monitored
    environment:
      - LOGSPOUT_MULTILINE=true
  # in clusters one or more nodes are typically defined as THE postgres nodes.
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.labels.postgres==true

networks:
  public:
    external: true
    name: ${PUBLIC_NETWORK}
  monitored:
    external: true
    name: ${MONITORED_NETWORK}


# self-signed only
secrets:
  rootca.crt:
    external: true
