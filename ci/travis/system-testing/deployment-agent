#!/bin/bash
# as of http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

before_install() {
    bash ci/travis/helpers/install_docker_compose
    bash ci/helpers/show_system_versions.bash
}

install() {
    pip3 install --upgrade pip wheel setuptools && pip3 --version
    pip3 install -r ci/travis/system-testing/requirements.txt
    pushd services/deployment-agent; make build ; popd
}

before_script() {
    pip freeze
    docker images
    pushd services/portainer; make up; popd
    pushd services/deployment-agent;
    # use the config file for testing not the default
    cp tests/mocks/valid_system_test_config.yaml deployment_config.default.yaml
    make up
    popd
    docker service ls
}

script() {
    # wait for a minute to let the swarm warm up...
    pytest --cov-append --cov=services/deployment-agent -v ci/travis/system-testing/tests
}

after_success() {
    pushd services/deployment-agent; make leave ; popd
}

after_failure() {
    docker service ls
    docker service ps deployment-agent_auto-deployment-agent
    docker service logs deployment-agent_auto-deployment-agent
    docker ps
    pushd services/deployment-agent; make leave ; popd
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
