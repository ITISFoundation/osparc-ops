# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'my-project'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - 'alert.rules'
  # - "first.rules"
  # - "second.rules"

# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
         - targets: ['localhost:9090']


  - job_name: 'cadvisor'

    scrape_interval: 5s

    dns_sd_configs:
    - names:
      - 'tasks.cadvisor'
      type: 'A'
      port: 8080

#     static_configs:
#          - targets: ['cadvisor:8080']

  - job_name: 'node-exporter'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    dns_sd_configs:
    - names:
      - 'tasks.node-exporter'
      type: 'A'
      port: 9100
    
#     static_configs:
#          - targets: ['node-exporter:9100']

  - job_name: 'postgres-exporter'
    scrape_interval: 5s

    dns_sd_configs:
    - names:
      - 'tasks.postgres-exporter'
      type: 'A'
      port: 9187

    #static_configs:
    #    - targets: ['postgres-exporter:9187']

    # Instrumented osparc-simcore services
    # TODO: shall monitor all replicas!
  - job_name: 'webserver'
    static_configs:
        - targets: ['webserver:8080']

  - job_name: 'storage'
    static_configs:
        - targets: ['storage:8080']
  
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8082']
    
  - job_name: 'registry'
    static_configs:
      - targets: ['registry:5001']
    # to generate the token use the following
    # docker run -v /etc/ssl/certs:/etc/ssl/certs:ro --network host \
    #   -e MC_HOST_local="https://12345678:12345678@osparc.local:10000" \
    #   minio/mc admin prometheus generate local
  # - job_name: minio-job
  #   bearer_token: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjQ3MjM2NDQyODQsImlzcyI6InByb21ldGhldXMifQ.qdhHFZyTV9yyktrHf7xGsgdoN0yijmBsJdH19EUHTBXIZhOkO2C3TIQvna9wnI75HFjXgdAEiUJdyH7dTMcPPQ
  #   metrics_path: /minio/prometheus/metrics
  #   scheme: https
  #   static_configs:
  #   - targets: ['osparc.local:10000']